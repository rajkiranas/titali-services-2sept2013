package com.quick.tim.mobileserviceprovider.entity;
// Generated 5 Jun, 2013 6:08:00 PM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Std generated by hbm2java
 */
@Entity
@Table(name="std", schema="public"
)
public class Std  implements java.io.Serializable {


     private String std;
     private Set<Notices> noticeses = new HashSet<Notices>(0);
     private Set<Whoisdoingwhat> whoisdoingwhats = new HashSet<Whoisdoingwhat>(0);
     private Set<Whatsnew> whatsnews = new HashSet<Whatsnew>(0);
     private Set<QuickLearn> quickLearns = new HashSet<QuickLearn>(0);
     private Set<ExamEntry> examEntries = new HashSet<ExamEntry>(0);
     private Set<TeacherStddivSub> teacherStddivSubs = new HashSet<TeacherStddivSub>(0);
     private Set<Stddiv> stddivs = new HashSet<Stddiv>(0);
     private Set<StudentMaster> studentMasters = new HashSet<StudentMaster>(0);
     private Set<UserMaster> userMasters = new HashSet<UserMaster>(0);
     private Set<Sub> subs = new HashSet<Sub>(0);

    public Std() {
    }

	
    public Std(String std) {
        this.std = std;
    }
    public Std(String std, Set<Notices> noticeses, Set<Whoisdoingwhat> whoisdoingwhats, Set<Whatsnew> whatsnews, Set<QuickLearn> quickLearns, Set<ExamEntry> examEntries, Set<TeacherStddivSub> teacherStddivSubs, Set<Stddiv> stddivs, Set<StudentMaster> studentMasters, Set<UserMaster> userMasters, Set<Sub> subs) {
       this.std = std;
       this.noticeses = noticeses;
       this.whoisdoingwhats = whoisdoingwhats;
       this.whatsnews = whatsnews;
       this.quickLearns = quickLearns;
       this.examEntries = examEntries;
       this.teacherStddivSubs = teacherStddivSubs;
       this.stddivs = stddivs;
       this.studentMasters = studentMasters;
       this.userMasters = userMasters;
       this.subs = subs;
    }
   
     @Id 
    
    @Column(name="std", unique=true, nullable=false, length=7)
    public String getStd() {
        return this.std;
    }
    
    public void setStd(String std) {
        this.std = std;
    }
   
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="std")
    public Set<Notices> getNoticeses() {
        return this.noticeses;
    }
    
    public void setNoticeses(Set<Notices> noticeses) {
        this.noticeses = noticeses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="std")
    public Set<Whoisdoingwhat> getWhoisdoingwhats() {
        return this.whoisdoingwhats;
    }
    
    public void setWhoisdoingwhats(Set<Whoisdoingwhat> whoisdoingwhats) {
        this.whoisdoingwhats = whoisdoingwhats;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="std")
    public Set<Whatsnew> getWhatsnews() {
        return this.whatsnews;
    }
    
    public void setWhatsnews(Set<Whatsnew> whatsnews) {
        this.whatsnews = whatsnews;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="std")
    public Set<QuickLearn> getQuickLearns() {
        return this.quickLearns;
    }
    
    public void setQuickLearns(Set<QuickLearn> quickLearns) {
        this.quickLearns = quickLearns;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="std")
    public Set<ExamEntry> getExamEntries() {
        return this.examEntries;
    }
    
    public void setExamEntries(Set<ExamEntry> examEntries) {
        this.examEntries = examEntries;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="std")
    public Set<TeacherStddivSub> getTeacherStddivSubs() {
        return this.teacherStddivSubs;
    }
    
    public void setTeacherStddivSubs(Set<TeacherStddivSub> teacherStddivSubs) {
        this.teacherStddivSubs = teacherStddivSubs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="std")
    public Set<Stddiv> getStddivs() {
        return this.stddivs;
    }
    
    public void setStddivs(Set<Stddiv> stddivs) {
        this.stddivs = stddivs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="std")
    public Set<StudentMaster> getStudentMasters() {
        return this.studentMasters;
    }
    
    public void setStudentMasters(Set<StudentMaster> studentMasters) {
        this.studentMasters = studentMasters;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="stds")
    public Set<UserMaster> getUserMasters() {
        return this.userMasters;
    }
    
    public void setUserMasters(Set<UserMaster> userMasters) {
        this.userMasters = userMasters;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="public.stdsub", joinColumns = { 
        @JoinColumn(name="std", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="sub", nullable=false, updatable=false) })
    public Set<Sub> getSubs() {
        return this.subs;
    }
    
    public void setSubs(Set<Sub> subs) {
        this.subs = subs;
    }




}


